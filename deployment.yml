---
## Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: dev-ns
---
## ResourceQuota
apiVersion: v1
kind: ResourceQuota
metadata:
  name: dev-resourcequota
  namespace: dev-ns
spec:
  hard:
    pods: "4"
    requests.cpu: "2"            # enough for 3x500m = 1.5 CPU
    requests.memory: "2Gi"       # enough for 3x500Mi = 1.5Gi
    limits.cpu: "3"              # 3x700m = 2.1 CPU
    limits.memory: "4Gi"         # 3x1Gi = 3Gi
    persistentvolumeclaims: "1"
    requests.storage: "5Gi"      # matches PVC request below
---
## PersistentVolumeClaim (5Gi Azure Disk, dynamic provisioning)
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dev-buildpacks-pvc
  namespace: dev-ns
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: managed-csi      # Azure Disk CSI driver
  resources:
    requests:
      storage: 5Gi
---
## Deployment (mounting PVC at /data)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-buildpacks-deployment
  namespace: dev-ns
spec:
  replicas: 3
  selector:
    matchLabels:
      app: buildpacks
  template:
    metadata:
      labels:
        app: buildpacks
    spec:
      containers:
      - name: dev-buildpacks-container
        image: repo12.azurecr.io/buildpacks-image:v1.0
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: "500m"
            memory: "500Mi"
          limits:
            cpu: "700m"
            memory: "1Gi"
        volumeMounts:
        - name: app-storage
          mountPath: /data               # directory inside container
      volumes:
      - name: app-storage
        persistentVolumeClaim:
          claimName: dev-buildpacks-pvc
---
## Service
apiVersion: v1
kind: Service
metadata:
  name: dev-buildpacks-service
  namespace: dev-ns
spec:
  selector:
    app: buildpacks
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  type: ClusterIP
---
## Ingress for AGIC
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dev-buildpacks-ingress
  namespace: dev-ns
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
spec:
  ingressClassName: azure-application-gateway
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: dev-buildpacks-service
            port:
              number: 80
